// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// User model for both customers and supermarket admins
model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  email         String    @unique
  password      String
  name          String
  role          UserRole  @default(CUSTOMER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  purchases     Purchase[]
  supermarket   Supermarket? @relation("SupermarketAdmin")
}

enum UserRole {
  CUSTOMER
  SUPERMARKET_ADMIN
}

// Supermarket model
model Supermarket {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  address       String
  admin         User      @relation("SupermarketAdmin", fields: [adminId], references: [id])
  adminId       String    @unique @db.ObjectId
  products      Product[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// Product model
model Product {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  description   String?
  price         Float
  stock         Int
  expiryDate    DateTime
  supermarket   Supermarket @relation(fields: [supermarketId], references: [id])
  supermarketId String    @db.ObjectId
  category      String
  purchases     Purchase[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// Purchase model for tracking customer purchases
model Purchase {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  user          User      @relation(fields: [userId], references: [id])
  userId        String    @db.ObjectId
  product       Product   @relation(fields: [productId], references: [id])
  productId     String    @db.ObjectId
  quantity      Int
  totalPrice    Float
  purchaseDate  DateTime  @default(now())
}

// Analytics model for storing AI predictions and analysis
model Analytics {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  productId     String    @db.ObjectId
  prediction    Json      // Stores AI predictions and analysis data
  period        String    // DAILY, WEEKLY, MONTHLY
  createdAt     DateTime  @default(now())
}
